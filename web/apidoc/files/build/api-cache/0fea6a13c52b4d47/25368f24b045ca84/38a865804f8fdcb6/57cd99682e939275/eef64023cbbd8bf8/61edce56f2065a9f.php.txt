<?php 
/* Cachekey: cache/stash_default/documentation\api\php\d90a8d9e7e6fbf997cf040195541adcc/ */
/* Type: array */
/* Expiration: 2019-04-13T21:58:33+00:00 */



$loaded = true;
$expiration = 1555192713;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

