<?php 
/* Cachekey: cache/stash_default/documentation\api\php\4c078c605a057b25e6222dac669b65d8/ */
/* Type: array */
/* Expiration: 2019-04-13T23:55:44+00:00 */



$loaded = true;
$expiration = 1555199744;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554790111;

