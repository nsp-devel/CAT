<?php 
/* Cachekey: cache/stash_default/documentation\api\php\e0d95554efe427457a72c6280abc4aaa/ */
/* Type: array */
/* Expiration: 2019-04-14T03:30:10+00:00 */



$loaded = true;
$expiration = 1555212610;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

