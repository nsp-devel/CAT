<?php 
/* Cachekey: cache/stash_default/documentation\api\php\5a72de4754034afd906419e5230675cf/ */
/* Type: array */
/* Expiration: 2019-04-13T19:05:59+00:00 */



$loaded = true;
$expiration = 1555182359;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

