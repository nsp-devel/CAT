<?php 
/* Cachekey: cache/stash_default/documentation\api\php\da2da666dd780199d06d5ca413e78e84/ */
/* Type: array */
/* Expiration: 2019-04-13T21:15:26+00:00 */



$loaded = true;
$expiration = 1555190126;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

