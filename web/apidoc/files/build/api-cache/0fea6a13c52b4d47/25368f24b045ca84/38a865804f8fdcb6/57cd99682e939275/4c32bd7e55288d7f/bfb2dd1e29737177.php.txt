<?php 
/* Cachekey: cache/stash_default/documentation\api\php\e4990e40b203fa53ac97f76715676378/ */
/* Type: array */
/* Expiration: 2019-04-09T21:26:26+00:00 */



$loaded = true;
$expiration = 1554845186;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554465625;

