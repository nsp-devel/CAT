<?php 
/* Cachekey: cache/stash_default/documentation\api\php\d92ab74a2440756a5fedd31ee56d9c9e/ */
/* Type: array */
/* Expiration: 2019-04-13T13:12:51+00:00 */



$loaded = true;
$expiration = 1555161171;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554790111;

