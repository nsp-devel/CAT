<?php 
/* Cachekey: cache/stash_default/documentation\api\php\ce0c12be092f345467d1f75da0fe0dc7/ */
/* Type: array */
/* Expiration: 2019-04-13T23:11:57+00:00 */



$loaded = true;
$expiration = 1555197117;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

