<?php 
/* Cachekey: cache/stash_default/documentation\api\php\20f770b7b304681bf27d72785f82b037/ */
/* Type: array */
/* Expiration: 2019-04-13T19:20:13+00:00 */



$loaded = true;
$expiration = 1555183213;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554791637;

