<?php 
/* Cachekey: cache/stash_default/documentation\api\php\f4840bd09c4502496d7a6540d95c0f85/ */
/* Type: array */
/* Expiration: 2019-04-13T17:31:22+00:00 */



$loaded = true;
$expiration = 1555176682;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554790111;

