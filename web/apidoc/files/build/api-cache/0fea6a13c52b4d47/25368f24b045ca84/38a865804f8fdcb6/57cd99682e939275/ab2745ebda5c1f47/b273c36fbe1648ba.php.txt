<?php 
/* Cachekey: cache/stash_default/documentation\api\php\29b73e27220219d59d69a236ec835226/ */
/* Type: array */
/* Expiration: 2019-04-14T05:25:14+00:00 */



$loaded = true;
$expiration = 1555219514;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554790111;

