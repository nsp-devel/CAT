<?php 
/* Cachekey: cache/stash_default/documentation\api\php\a8f7de4b34ff1f797006d614271691d4/ */
/* Type: array */
/* Expiration: 2019-04-14T02:55:56+00:00 */



$loaded = true;
$expiration = 1555210556;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554790111;

