<?php 
/* Cachekey: cache/stash_default/documentation\api\php\b26b8233e25ebce86caec060795b9941/ */
/* Type: array */
/* Expiration: 2019-04-14T00:53:00+00:00 */



$loaded = true;
$expiration = 1555203180;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

