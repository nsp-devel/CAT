<?php 
/* Cachekey: cache/stash_default/documentation\api\php\887dd552efea7bf4083c3ca46bab8e43/ */
/* Type: array */
/* Expiration: 2019-04-13T19:24:21+00:00 */



$loaded = true;
$expiration = 1555183461;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554790111;

