<?php 
/* Cachekey: cache/stash_default/documentation\api\php\d9f091c8294d27560e3a752345498d7b/ */
/* Type: array */
/* Expiration: 2019-04-13T18:38:28+00:00 */



$loaded = true;
$expiration = 1555180708;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

