<?php 
/* Cachekey: cache/stash_default/documentation\api\php\4f0aed2fcd2cd815198c3bdd538065b2/ */
/* Type: array */
/* Expiration: 2019-04-14T05:41:20+00:00 */



$loaded = true;
$expiration = 1555220480;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

