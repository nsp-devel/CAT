<?php 
/* Cachekey: cache/stash_default/documentation\api\php\7ab9ceca6b5c77989c4c18dca79d9734/ */
/* Type: array */
/* Expiration: 2019-04-13T18:58:05+00:00 */



$loaded = true;
$expiration = 1555181885;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

