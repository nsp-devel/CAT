<?php 
/* Cachekey: cache/stash_default/documentation\api\php\ae5ec1838a4aa24788fa52508fed7a52/ */
/* Type: array */
/* Expiration: 2019-04-13T17:05:45+00:00 */



$loaded = true;
$expiration = 1555175145;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554790111;

