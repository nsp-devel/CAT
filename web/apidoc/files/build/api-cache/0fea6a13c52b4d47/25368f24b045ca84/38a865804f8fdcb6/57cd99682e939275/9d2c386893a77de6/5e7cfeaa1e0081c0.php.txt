<?php 
/* Cachekey: cache/stash_default/documentation\api\php\0a491f279931323d05f7496883c16d92/ */
/* Type: array */
/* Expiration: 2019-04-13T12:54:45+00:00 */



$loaded = true;
$expiration = 1555160085;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

