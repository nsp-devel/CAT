<?php 
/* Cachekey: cache/stash_default/documentation\api\php\bcde80ecd5921874deb8723494c8f72c/ */
/* Type: array */
/* Expiration: 2019-04-14T05:22:05+00:00 */



$loaded = true;
$expiration = 1555219325;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789030;

