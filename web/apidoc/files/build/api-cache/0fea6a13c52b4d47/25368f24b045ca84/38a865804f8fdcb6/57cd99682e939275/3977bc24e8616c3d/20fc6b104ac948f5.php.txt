<?php 
/* Cachekey: cache/stash_default/documentation\api\php\88f9e1ecb4fcfcc8e362f58463ab7d83/ */
/* Type: array */
/* Expiration: 2019-04-13T22:29:35+00:00 */



$loaded = true;
$expiration = 1555194575;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

