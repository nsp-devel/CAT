<?php 
/* Cachekey: cache/stash_default/documentation\api\php\531b88af244c05104240c7d0ac18b9f1/ */
/* Type: array */
/* Expiration: 2019-04-14T04:39:15+00:00 */



$loaded = true;
$expiration = 1555216755;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554790111;

