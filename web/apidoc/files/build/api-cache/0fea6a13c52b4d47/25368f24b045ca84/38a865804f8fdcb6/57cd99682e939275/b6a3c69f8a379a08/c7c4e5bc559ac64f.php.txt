<?php 
/* Cachekey: cache/stash_default/documentation\api\php\5825d8f90b19eabfce73b01882a79649/ */
/* Type: array */
/* Expiration: 2019-04-14T02:54:49+00:00 */



$loaded = true;
$expiration = 1555210489;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

