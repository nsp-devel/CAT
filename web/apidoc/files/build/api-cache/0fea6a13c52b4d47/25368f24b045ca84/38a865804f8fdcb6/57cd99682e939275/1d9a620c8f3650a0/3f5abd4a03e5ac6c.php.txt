<?php 
/* Cachekey: cache/stash_default/documentation\api\php\0c90e7abfd45a4022b7f9099bfa8b333/ */
/* Type: array */
/* Expiration: 2019-04-14T05:18:50+00:00 */



$loaded = true;
$expiration = 1555219130;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1554789124;

